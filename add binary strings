string Solution::addBinary(string A, string B) {
    int i=A.length()-1;
    int j=B.length()-1;
    int carry=0;
    string ans="";
    while(i>=0 && j>=0){
        char c=((A[i]-'0')^(B[j]-'0')^carry)+'0';
        ans=c+ans;
        if((A[i]-'0')+(B[j]-'0')+carry>1) carry=1;
        else carry=0;
        --i; --j;
    }
    while(i>=0){
        char c=((A[i]-'0')^carry)+'0';
        ans=c+ans;
        if((A[i]-'0')+carry>1) carry=1;
        else carry=0;
        --i;
    }
     while(j>=0){
        char c=((B[j]-'0')^carry)+'0';
        ans=c+ans;
        if((B[j]-'0')+carry>1) carry=1;
        else carry=0;
        --j;
    }
    if(carry) ans='1'+ans;
    return ans;
}
